// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  username      String         @unique @db.VarChar(250)
  password      String         @db.VarChar(512)
  collaborators Collaborator[]
  projects      Project[]
  created_at    DateTime       @default(now())
  updated_at    DateTime?      @updatedAt
  delete_at     DateTime?

  @@map("users")
}

model Collaborator {
  id           String        @id @default(uuid())
  name         String
  created_at   DateTime      @default(now())
  updated_at   DateTime?     @updatedAt
  delete_at    DateTime?
  managers     User[]
  tasks        Task?         @relation(fields: [taskId], references: [id])
  taskId       String?
  timetrackers TimeTracker[]

  @@map("collaborators")
}

model Project {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  delete_at  DateTime?
  tasks      Task[]
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?

  @@map("projects")
}

model Task {
  id           String         @id @default(uuid())
  name         String
  description  String
  created_at   DateTime       @default(now())
  updated_at   DateTime?      @updatedAt
  delete_at    DateTime?
  project      Project?       @relation(fields: [projectId], references: [id])
  projectId    String?
  collaborator Collaborator[]
  timetrackers TimeTracker[]

  @@map("tasks")
}

model TimeTracker {
  id             String        @id @default(uuid())
  startDate      DateTime
  endDate        DateTime
  timeDiff       Int
  year           Int
  day            Int
  month          Int
  TimeZoneId     String        @db.VarChar(200)
  task           Task?         @relation(fields: [taskId], references: [id])
  taskId         String?
  collaborator   Collaborator? @relation(fields: [collaboratorId], references: [id])
  collaboratorId String?

  @@map("timetrackers")
}

// Criar uma tabela 
// data inicio 
// data final 
// diferen√ßa das datas
// ano 
// dia 
// mes 
